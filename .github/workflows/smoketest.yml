name: "Test Starter Pack"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  kind:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@master

    - uses: goanpeca/setup-miniconda@v1
      with:
        miniconda-version: 'latest'
        activate-environment: kubeflow-fairing
        environment-file: environment.yml
        python-version: 3.7
        auto-activate-base: false

    - name: Run BLERSSI pipeline
      run: |
        echo "Compiling the pipeline..."
        papermill apps/networking/ble-localization/onprem/pipelines/local-BLERSSI-Pipeline-Deployment.ipynb test/build/local-output-blerssi.ipynb
        yq w -i blerssi.yaml "spec.volumes[0].name" "nfs"
        yq w -i blerssi.yaml "spec.volumes[0].persistentVolumeClaim.claimName" "nfs-wf-volume"
        cat blerssi.yaml | tr '_' '-' > blerssi_formatted.yaml
        argo lint blerssi_formatted.yaml
        echo "Executing the pipeline..."

        # kfp -n kubeflow --endpoint ${KF_PIPELINES_HOST} run submit \
        # -e "kfp-cli" \
        # -r "blerssi" \
        # -f blerssi_formatted.yaml

    - name: Check Pipeline output
      run: |
        echo "Download the Argo binary..."
        curl -sLO https://github.com/argoproj/argo/releases/download/v2.7.2/argo-linux-amd64

        echo "Make Argo binary executable..."
        chmod +x argo-linux-amd64

        echo "Move binary to path..."
        mv ./argo-linux-amd64 ${GITHUB_WORKSPACE}/argo

        echo "Test installation..."
        ${GITHUB_WORKSPACE}/argo version

        echo "Sleep 5 minutes; wait for pipeline to finish"
        sleep 300

        echo "Get Argo workflow status"
        ${GITHUB_WORKSPACE}/argo list --all-namespaces
